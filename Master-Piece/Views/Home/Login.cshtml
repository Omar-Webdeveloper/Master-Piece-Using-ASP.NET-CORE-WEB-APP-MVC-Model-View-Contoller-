@model LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<style>

    .login-container {
        margin: 0;
        padding: 0;
        background: linear-gradient(135deg, #e0e0e0 0%, #f0f8ff 50%, #e0e0e0 100%);
        background-attachment: fixed;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        padding-top: 70px;
    }

    .login-form {
        background: #fdfdfd; /* White with a tiny hint of gray */
        padding: 35px 40px;
        border-radius: 16px;
        position: relative;
        width: 380px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        z-index: 1;
        transition: transform 0.3s ease;
    }

        /* Gradient border around the card */
        .login-form::before {
            content: "";
            position: absolute;
            top: -3px;
            left: -3px;
            right: -3px;
            bottom: -3px;
            background: linear-gradient(45deg, #cde9f9, #a5c8f0);
            border-radius: 20px;
            z-index: -1;
            transition: transform 1s ease;
        }

        /* Card grows slightly on hover */
        .login-form:hover {
            transform: scale(1.02);
        }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: 600;
        display: block;
        margin-bottom: 8px;
        color: #333;
    }

    .form-control {
        width: 100%;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 8px;
        font-size: 16px;
        background-color: #f7f7f7;
        transition: border-color 0.3s, background-color 0.3s;
    }

        .form-control:focus {
            border-color: #0072ff;
            background-color: #ffffff;
            outline: none;
        }

    .login-btn {
        width: 100%;
        padding: 12px;
        background-color: #0072ff;
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: bold;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .login-btn:hover {
            background-color: #0056cc;
        }

    .text-danger {
        color: red;
        font-size: 14px;
    }

    /* Rotate the gradient when focusing an input */
    .form-control:focus ~ .login-form::before {
        transform: rotate(180deg);
    }
</style>

<!-- HTML PART -->
<div class="login-container">
    <form class="login-form" asp-action="Login">
        <div class="form-group">
            <label asp-for="Email">Email</label>
            <input type="text" asp-for="Email" class="form-control" placeholder="Enter your email ">
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="PasswordHash">Password</label>
            <input type="password" asp-for="PasswordHash" class="form-control" placeholder="Enter your password">
            <span asp-validation-for="PasswordHash" class="text-danger"></span>
        </div>

        <div class="form-group">
            <p><a asp-area="" asp-controller="Home" asp-action="Reset">Forgot your password? Click here</a></p>
        </div>

        <div class="form-group">
            <button type="submit" class="login-btn">Login</button>
        </div>

        <div class="form-group">
            <p>Don’t have an account? <a asp-area="" asp-controller="Home" asp-action="Register">Create one here</a></p>
        </div>
    </form>
</div>

@section Scripts {
    @* SweetAlert messages *@
    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: '@TempData["SuccessMessage"]',
                confirmButtonText: 'OK'
            });
        </script>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: '@TempData["ErrorMessage"]',
                confirmButtonText: 'OK'
            });
        </script>
    }

    @* Validation Scripts *@
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

